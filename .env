#! /bin/bash

##
## General config
##
echo "reading general config..."
export K8S_CLUSTER_KORIFI="${1:-korifi-cluster12}"
#? export k8s_cluster_korifi_yaml="${scriptpath}/k8s_korifi_cluster_config.yaml"
#? export GATEWAY_CLASS_NAME="contour"
export GO_VERSION=1.24.2
export GO_PACKAGE="go${GO_VERSION}.linux-amd64.tar.gz"
export K8S_VERSION="1.30.0"
export CERT_MANAGER_VERSION="1.17.2"
export KPACK_VERSION="0.17.0"
export CONTOUR_VERSION="1.31"
export KORIFI_VERSION="0.15.1"

export ROOT_NAMESPACE="cf"
export KORIFI_NAMESPACE="korifi"
export ADMIN_USERNAME="cf-admin"
export BASE_DOMAIN="${K8S_CLUSTER_KORIFI}.fake"
export GATEWAY_CLASS_NAME="contour"

export CERT_PATH="$scriptpath/tmp"
mkdir -p "$CERT_PATH"

# dummies are sufficient for pulling images from only public registries
export DOCKER_REGISTRY_USERNAME="dummy"
export DOCKER_REGISTRY_PASSWORD="dummy"
export DOCKER_REGISTRY_SERVER="dummy"
echo "...done"

##
## Type specific config
##
echo "reading K8s type specific config (for $K8S_TYPE)"
case "$K8S_TYPE" in
  "KIND")
	export K8S_CLUSTER_KORIFI_YAML="${scriptpath}/k8s_korifi_cluster_config.yaml"
        ;;
  "AKS")
        # Define Service Principal details
        export AZ_ENV_FILE="$scriptpath/.azure_env"

        export AZ_SERVICE_PRINCIPAL="SP_korifi"
        export AZ_APP_ID="value-in-env-file"
        export AZ_CLIENT_SECRET="${AZ_CLIENT_SECRET:-}"
        export AZ_TENANT_ID="value-in-env-file"
        # Other Azure variables (need to be entered here or will be asked during runtime)
        export AZ_SUBSCRIPTION_ID="value-in-env-file"
	echo "  sourcing azure env file '$AZ_ENV_FILE'..."
        # shellcheck source=/dev/null disable=SC2090    # ShellCheck can't follow non-constant source, but not needed here
        . "$AZ_ENV_FILE"
	echo "  ..done"
        ;;
  *)
        echo "Type '$K8S_TYPE' is not a valid type! (valid types: KIND, AKS)"
        ;;
esac
echo "...done"
