#! /bin/bash

##
## General config
##
#echo "reading general config..."
export K8S_TYPE="${2:-$K8S_TYPE}"
export K8S_CLUSTER_KORIFI="${1:-$K8S_CLUSTER_KORIFI}"
if [[ -z "$K8S_CLUSTER_KORIFI" ]]; then
  echo "K8S_CLUSTER_KORIFI is empty! This must be set as env variable or provided as first parameter!"
  return 1
fi

echo "
============================================================
Using following variables:
- K8S_TYPE:		$K8S_TYPE
- K8S_CLUSTER_KORIFI:	$K8S_CLUSTER_KORIFI
============================================================
"


#? export k8s_cluster_korifi_yaml="${scriptpath}/k8s_korifi_cluster_config.yaml"
export GO_VERSION=1.24.2
export GO_PACKAGE="go${GO_VERSION}.linux-amd64.tar.gz"
export K8S_VERSION="1.30.0"
export CERT_MANAGER_VERSION="1.17.2"
export KPACK_VERSION="0.17.0"
export CONTOUR_VERSION="1.31"
export KORIFI_VERSION="0.15.1"

export ADMIN_USERNAME="cf-admin@${K8S_CLUSTER_KORIFI}"
export ROOT_NAMESPACE="cf"
export KORIFI_NAMESPACE="korifi"
export GATEWAY_CLASS_NAME="contour"
export CF_HTTP_PORT=32080
export CF_HTTPS_PORT=32443

export CERT_PATH="$scriptpath/tmp"
mkdir -p "$CERT_PATH"

# dummies are sufficient for pulling images from only public registries
export DOCKER_REGISTRY_USERNAME="dummy"
export DOCKER_REGISTRY_PASSWORD="dummy"
export DOCKER_REGISTRY_SERVER="dummy"
#echo "...done"


##
## Type specific config
##
case "$K8S_TYPE" in
  "KIND")
	export K8S_CLUSTER_KORIFI_YAML="${scriptpath}/k8s_korifi_cluster_config.yaml"

	export BASE_DOMAIN="localhost"
	export CF_API_DOMAIN="localhost"
	#export BASE_DOMAIN="${K8S_CLUSTER_KORIFI}.fake"	# EXPERIMENT!!
	#export CF_API_DOMAIN="api.${BASE_DOMAIN}"	# EXPERIMENT!!
        #export BASE_DOMAIN="localhost" 			# EXPERIMENT 2 !!
        #export CF_API_DOMAIN="api.${BASE_DOMAIN}"       # EXPERIMENT 2 !!
	export CF_APPS_DOMAIN="apps.${BASE_DOMAIN}"	# EXPERIMENT 2 !!
        ;;
  "AKS")
        # Define Service Principal details
        export AZ_ENV_FILE="$scriptpath/.azure_env"

        export AZ_SERVICE_PRINCIPAL="SP_korifi"
        export AZ_APP_ID="value-in-env-file"
        export AZ_CLIENT_SECRET="${AZ_CLIENT_SECRET:-}"
        export AZ_TENANT_ID="value-in-env-file"
        # Other Azure variables (need to be entered here or will be asked during runtime)
        export AZ_SUBSCRIPTION_ID="value-in-env-file"
        # shellcheck source=/dev/null disable=SC2090    # ShellCheck can't follow non-constant source, but not needed here
        . "$AZ_ENV_FILE"

	export BASE_DOMAIN="${K8S_CLUSTER_KORIFI}.fake"
	export CF_API_DOMAIN="api.${BASE_DOMAIN}"
	export CF_APPS_DOMAIN="apps.${BASE_DOMAIN}"
        ;;
  "UNKNOWN")
	echo "Environment variable 'K8S_TYPE' must be set (KIND, AKS) to specify the type of Kubernetes used"
	echo "Script aborted!"
	return 1
	;;
  *)
        echo "Value '$K8S_TYPE' for environment variable 'K8S_TYPE' is not a valid type! (valid types: KIND, AKS)"
	return 1
        ;;
esac

#echo "...done"
